# kortina mac specific bash profile settings
bind '"\M-d": backward-kill-word'

##################################################
# aliases
##################################################
alias flushdns='sudo dscacheutil -flushcache'
alias SaveScreen='/System/Library/Frameworks/ScreenSaver.framework/Resources/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine'
alias updatedb='sudo /usr/libexec/locate.updatedb'
alias gg='git grep -n --color --heading --break'
alias tmux="TERM=screen-256color-bce tmux"
export TERM="xterm-256color"
alias t="bundle exec rspec --color"
alias dk="docker-compose"
alias pidawk="awk '{print \$2}'"
alias v='pbpaste | vim -'
alias pluginstall='vim +PlugInstall +qall'
export FZF_DEFAULT_COMMAND='ag -g ""'


##################################################
# path adjustments
##################################################
export PATH="~/.vim/:/usr/local:/usr/local/bin/ruby:$PATH"

export GOPATH="$HOME/gopath"
export PATH="$GOPATH/bin:$PATH"
export PATH="$HOME/dotfiles/bin:$PATH"
# enables `code` cli binary
export PATH="$PATH:$VSCODE_APP/Contents/Resources/app/bin"

# Setting PATH for MacPython 2.5
# PATH="/Library/Frameworks/Python.framework/Versions/Current/bin:${PATH}"
# export PATH
# This does not seem to play nice with pyenv:
# export PYTHONPATH="`brew --prefix`/lib/python2.7/site-packages:$PYTHONPATH"


##################################################
# pretty bash prompt with git / svn branch name
##################################################
function parse_git_dirty {
  nothing_message=`git --version | ruby -e 'STDIN.readlines[0].match(/(\d+\.\d+)/); puts ($1.to_f >= 1.8) ? "nothing to commit, working tree clean" : "nothing to commit (working directory clean)"'`
  [[ $(git status 2> /dev/null | tail -n1) != "$nothing_message" ]] && echo "*"
}
function parse_git_branch {
  git branch 2> /dev/null | sed -e "/^[^*]/d" -e "s/* \(.*\)/(\1$(parse_git_dirty))/"
}
function parse_svn_branch {
        svn info 2> /dev/null | grep URL | sed -e "s/.*\/\(.*\)$/(\1)/"
}
PS1="\n\
\[\033[0;32m\]\u$DIM \[\033[0;37m\]@ \[\033[0;33m\]\h 
\[\033[0;35m\]\$PWD \[\033[0;37m\]\$(parse_git_branch 2> /dev/null)\$(parse_svn_branch 2> /dev/null)$ " && export PS1


##################################################
# bash completion
##################################################

source_if_exists() {
    source_file_path="$1"
    [[ -f "$source_file_path" ]] && source "$source_file_path"
}

source_if_exists "`brew --prefix`/etc/bash_completion"
source_if_exists "`brew --prefix`/etc/bash_completion.d/rails.bash"
source_if_exists "$HOME/src/hub/etc/hub.bash_completion.sh"
command -v gulp >/dev/null 2>&1  && eval "$(gulp --completion=bash)"

##################################################
# settings not on github
##################################################
source_if_exists "$HOME/.bash_mac_private"
source_if_exists "$HOME/.bash_profile_aws"

##################################################
# ruby
##################################################
export PATH="$HOME/.rbenv/shims:$PATH"
if which rbenv > /dev/null; then eval "$(rbenv init -)"; else echo rbenv not installed; fi
source_if_exists "$HOME/.rbenv/completions/rbenv.bash"

##################################################
# python
##################################################
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then eval "$(pyenv init -)"; fi

##################################################
# fzf
##################################################
source_if_exists "$HOME/.fzf.bash"
source_if_exists "$HOME/.fzf.conf.bash"

##################################################
# docker
##################################################
# export DOCKER_HOST="tcp://192.168.66.10:2375"
# export DOCKER_API_VERSION=1.21 # Error response from daemon: client is newer than server
export FIN_DEV_HOME="$HOME/fin/fin-dev"
export PATH="$PATH:$FIN_DEV_HOME"
export FIN_SSH_USERNAME="andrew_kortina"
source_if_exists "$FIN_DEV_HOME/bashrc"
# export RUN_FLOW_ON_COMMIT=1 # for Fin overcommit


##################################################
# javascript
##################################################
export NVM_DIR="$HOME/.nvm"
. "/usr/local/opt/nvm/nvm.sh"
